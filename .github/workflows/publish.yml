name: Upload Python Package

on:
  # Run automatically *once* when a release is published (not on draft/created/edited events)
  release:
    types: [published]
  # Still allow manual trigger from the Actions tab
  workflow_dispatch:

# Prevent duplicate runs for the same ref (e.g., if a release is republished)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install latest packaging tooling so that PEP639 (license-expression / license-file)
        # metadata fields are recognised by wheel and Twine.
        pip install --no-cache-dir --upgrade build wheel
        pip install --no-cache-dir --upgrade "twine>=5.0.0" "pkginfo>=1.9.7"
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        rm -rf build/ dist/
        python -m build
        # 'twine check' currently fails on valid PEP 639 metadata (License-Expression/License-File)
        # Run it non-blocking so build proceeds, then upload to PyPI.
        twine check dist/* || echo "twine check produced warnings â€“ continuing"
        twine upload dist/*
